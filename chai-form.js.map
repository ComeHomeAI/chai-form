{"version":3,"file":"chai-form.js","sourceRoot":"","sources":["src/chai-form.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2024 Come Home AI, Inc.\r\n * SPDX-License-Identifier: BSD-3-Clause\r\n */\r\n\r\nimport { LitElement, html, css } from 'lit';\r\nimport { classMap } from 'lit/directives/class-map.js';\r\nimport { customElement, property, state } from 'lit/decorators.js';\r\n\r\n/**\r\n * The quoting form element that initiates the flow for the user.\r\n */\r\n@customElement('chai-form')\r\nexport class ChaiForm extends LitElement {\r\n  @state() private visitorId: string;\r\n\r\n  @state() private name: string;\r\n  @state() private phone: string;\r\n  @state() private email: string;\r\n  @state() private date: string;\r\n\r\n  @state() private nameChanged = false;\r\n  @state() private phoneChanged = false;\r\n  @state() private emailChanged = false;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.visitorId = localStorage.getItem('chai-visitorId') || crypto.randomUUID();\r\n    localStorage.setItem('chai-visitorId', this.visitorId);\r\n\r\n    this.name = localStorage.getItem('chai-name') || '';\r\n    this.phone = localStorage.getItem('chai-phone') || '';\r\n    this.email = localStorage.getItem('chai-email') || '';\r\n    this.date = localStorage.getItem('chai-date') || '';\r\n  }\r\n\r\n  static override styles = css`\r\n    :host {\r\n      /**\r\n       * The form-level CSS properties provide the initial look and feel for the form.\r\n       * Fine-grained adjustments are possible, but these form-level properties should\r\n       * be sufficient for most use cases.\r\n       */\r\n      /**\r\n       * The max width limits the width of the form component.\r\n       * The layout is responsive and will adjust to the available space.\r\n       */\r\n      --chai-form-max-width: 400px;\r\n      /**\r\n       * The brand color is used to set the initial color for all text as well as the\r\n       * background color for the button.\r\n       */\r\n      --chai-form-color-brand: #01919b;\r\n      /**\r\n       * The alert color is used to indicate errors or other important information.\r\n       */\r\n      --chai-form-color-alert: #fa2829;\r\n      /**\r\n       * The background is used for the overall form background. Note this does not\r\n       * have to be only a color.\r\n       */\r\n      --chai-form-background: #fffaf6;\r\n      /**\r\n       * The font family is applied to all of the form elements, except for inputs\r\n       * which keep their system-assigned default sans-serif font.\r\n       * By default, the font family is set to inherit from the parent element to\r\n       * allow the form elements to blend into the surrounding website's brand.\r\n       */\r\n      --chai-form-font-family: inherit;\r\n      /**\r\n       * This font size is applied to all of the form elements.\r\n       */\r\n      --chai-form-font-size: 16px;\r\n      /**\r\n       * This font weight is applied to all of the form elements.\r\n       */\r\n      --chai-form-font-weight: 400;\r\n      /**\r\n       * This border is applied to the form element only.\r\n       * Inputs and the button have their own border styles.\r\n       */\r\n      --chai-form-border: 1px solid #ccc;\r\n      /**\r\n       * This corner radius is applied to the form border, input field borders, and\r\n       * the button by default.\r\n       */\r\n      --chai-form-corner-radius: 8px;\r\n      /**\r\n       * This spacing is applied to form padding as well as the vertical gap between\r\n       * form fields. All other spacing is proportional to this value.\r\n       */\r\n      --chai-form-spacing: 16px;\r\n      /**\r\n       * Element-specific CSS properties allow for fine-tuning the look-and-feel.\r\n       * These should only be changed after ensuring that the form-level properties\r\n       * are insufficient for the desired look-and-feel.\r\n       */\r\n      --chai-input-color: var(--chai-form-color-brand);\r\n      --chai-input-border: 0.8px solid rgb(233,228,224);\r\n      --chai-input-shadow: rgba(21, 21, 21, 0.08) 0px 1px 2px 0px;\r\n      --chai-button-color: #fff;\r\n      --chai-button-font-size: var(--chai-form-font-size);\r\n      --chai-button-text-transform: uppercase;\r\n      --chai-button-background: var(--chai-form-color-brand);\r\n      --chai-button-background-hover: var(--chai-form-color-brand);\r\n      --chai-button-background-active: var(--chai-form-color-brand);\r\n      /**\r\n       * By default, the CHAI Form uses a CSS brightness filter to generate the\r\n       * hover and active states for the button.\r\n       * When specifying a background color for the hover and/or active states, it's\r\n       * recommended to set the filter for the corresponding state to none.\r\n       */\r\n      //TODO: Use CSS relative colors when fully supported\r\n      --chai-button-filter-hover: brightness(1.2);\r\n      --chai-button-filter-active: brightness(0.8);\r\n      --chai-button-corner-radius: var(--chai-form-corner-radius);\r\n    }\r\n    form {\r\n      display: flex;\r\n      flex-direction: column;\r\n      max-width: var(--chai-form-max-width);\r\n      gap: calc(var(--chai-form-spacing) / 2);\r\n      font-family: var(--chai-form-font-family);\r\n      font-size: var(--chai-form-font-size);\r\n      font-weight: var(--chai-form-font-weight);\r\n      border: var(--chai-form-border);\r\n      border-radius: var(--chai-form-corner-radius);\r\n      padding: var(--chai-form-spacing);\r\n      background: var(--chai-form-background);\r\n      color: var(--chai-form-color-brand);\r\n    }\r\n    label {\r\n      margin-bottom: calc(-1 * var(--chai-form-spacing) / 4);\r\n\r\n      span {\r\n        color: var(--chai-form-color-alert);\r\n        font-weight: bold;\r\n      }\r\n      //TODO: Use CSS pseudo-elements when :has is better supported\r\n      /* &:has(+ input[required])::after {\r\n        content: '*';\r\n        margin-left: 0.25em;\r\n        color: var(--chai-form-color-alert);\r\n        font-weight: bold;\r\n      } */\r\n    }\r\n    span.error {\r\n      color: var(--chai-form-color-alert);\r\n      font-size: calc(0.9 * var(--chai-form-font-size));\r\n      margin-top: calc(-1 * var(--chai-form-spacing) / 4 * 3);\r\n    }\r\n    input {\r\n      font-size: var(--chai-form-font-size);\r\n      color: var(--chai-input-color);\r\n      border: var(--chai-input-border);\r\n      border-radius: var(--chai-form-corner-radius);\r\n      box-shadow: var(--chai-input-shadow);\r\n      padding: calc(var(--chai-form-spacing) / 2);\r\n      margin-bottom: calc(var(--chai-form-spacing) / 2);\r\n\r\n      &.invalid {\r\n        border-color: var(--chai-form-color-alert);\r\n        border-width: 2px;\r\n      }\r\n    }\r\n    a {\r\n      cursor: pointer;\r\n      background: var(--chai-button-background);\r\n      color: var(--chai-button-color);\r\n      font-size: var(--chai-button-font-size);\r\n      text-transform: var(--chai-button-text-transform);\r\n      text-align: center;\r\n      text-decoration: none;\r\n      border-radius: var(--chai-button-corner-radius);\r\n      margin-top: calc(var(--chai-form-spacing) / 2);\r\n      padding: calc(var(--chai-form-spacing) / 1.5);\r\n\r\n      &:hover {\r\n        background: var(--chai-button-background-hover);\r\n        filter: var(--chai-button-filter-hover);\r\n        &:active {\r\n          background: var(--chai-button-background-hover);\r\n          filter: var(--chai-button-filter-active);\r\n        }\r\n      }\r\n      &:active {\r\n        background: var(--chai-button-background-hover);\r\n        filter: var(--chai-button-filter-active);\r\n      }\r\n    }\r\n  `;\r\n\r\n  /**\r\n   * The ComeHome.ai flow type is the ID that has been configured for the location/context of\r\n   * this form (e.g., the mover's website).\r\n   */\r\n  @property()\r\n  accessor flowType = \"comehome.ai\";\r\n\r\n  /**\r\n   * The text to display on the button; defaults to \"Get Quote\".\r\n   */\r\n  @property()\r\n  accessor buttonText = \"Get Quote\";\r\n\r\n  private isNameInvalid() {\r\n    return this.nameChanged && this.name.length < 2;\r\n  }\r\n  private isPhoneInvalid() {\r\n    return this.phoneChanged &&\r\n      !/^(\\+?1[-.\\s]?)?\\(?\\d{3}\\)?[-.\\s]?(?!555)\\d{3}[-.\\s]?\\d{4}$/.test(this.phone);\r\n  }\r\n  private isEmailInvalid() {\r\n    return this.emailChanged &&\r\n      !/^[^\\s@]+@(?!.*(\\w+\\.)?example\\.com)[^\\s@]+\\.[^\\s@]+$/.test(this.email);\r\n  }\r\n\r\n  override render() {\r\n    const nameInvalid = this.isNameInvalid();\r\n    const phoneInvalid = this.isPhoneInvalid();\r\n    const emailInvalid = this.isEmailInvalid();\r\n\r\n    //TODO: Replace '*' spans with CSS pseudo-elements once fully supported\r\n    return html`\r\n      <form id=\"chai-quote-form\">\r\n\r\n        <label for=\"name\">Name <span>*</span></label>\r\n        <input id=\"name\" type=\"text\" placeholder=\"First & Last Name\"\r\n          class=${classMap({ invalid: nameInvalid })} @blur=\"${this.blurField('name')}\"\r\n          autocomplete=\"name\" required\r\n          .value=\"${this.name}\" @input=\"${this.updateField('name')}\">\r\n        ${nameInvalid ? html`<span class=\"error\">Please enter your name.</span>` : ''}\r\n        \r\n        <label for=\"phoneNumber\">Phone Number <span>*</span></label>\r\n        <input id=\"phoneNumber\" type=\"tel\" placeholder=\"###-###-####\"\r\n          class=${classMap({ invalid: phoneInvalid })} @blur=\"${this.blurField('phone')}\"\r\n          autocomplete=\"tel\" required\r\n          .value=\"${this.phone}\" @input=\"${this.updateField('phone')}\">\r\n        ${phoneInvalid ? html`<span class=\"error\">Please enter a valid phone number.</span>` : ''}\r\n        \r\n        <label for=\"email\">Email <span>*</span></label>\r\n        <input id=\"email\" type=\"email\" placeholder=\"Email\"\r\n          class=${classMap({ invalid: emailInvalid })} @blur=\"${this.blurField('email')}\"\r\n          autocomplete=\"email\" required\r\n          .value=\"${this.email}\" @input=\"${this.updateField('email')}\">\r\n        ${emailInvalid ? html`<span class=\"error\">Please enter a valid email address.</span>` : ''}\r\n        \r\n        <label for=\"date\">Estimated Move Date</label>\r\n        <input id=\"date\" type=\"date\" placeholder=\"Estimated Move Date\"\r\n          autocomplete=\"off\" min=\"${new Date().toISOString().split('T')[0]}\"\r\n          .value=\"${this.date}\" @input=\"${this.updateField('date')}\">\r\n        \r\n          <a href=\"https://www.comehome.ai\" @click=\"${this.submit}\">${this.buttonText}</a>\r\n      </form>\r\n    `;\r\n  }\r\n\r\n  updateField(fieldName: 'name' | 'phone' | 'email' | 'date') {\r\n    return (e: Event) => {\r\n      const newValue = (e.target as HTMLInputElement).value;\r\n\r\n      this[fieldName] = newValue;\r\n\r\n      localStorage.setItem(`chai-${fieldName}`, newValue);\r\n\r\n      fetch(`https://example.local:3000/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CHAI-VisitorID': this.visitorId,\r\n        },\r\n        body: JSON.stringify({ fieldName: newValue }),\r\n      });\r\n      //TODO: Decide what to do about server errors. E.g.:\r\n      //      - open the flow URL immediately to try to capture the lead?\r\n      //      - show a 'please call us' fallback message to the user?\r\n\r\n      //TODO: Google Tag Manager integration!\r\n    };\r\n  }\r\n\r\n  blurField(fieldName: 'name' | 'phone' | 'email') {\r\n    return () => {\r\n      this[`${fieldName}Changed`] = true;\r\n    };\r\n  }\r\n\r\n  submit(e: Event) {\r\n    e.preventDefault();\r\n\r\n    // At this point, we know the user has interacted with the form\r\n    // and we can enforce display of any validation errors.\r\n    //TODO: Use :user-invalid when it is better supported.\r\n    this.nameChanged = true;\r\n    this.phoneChanged = true;\r\n    this.emailChanged = true;\r\n\r\n    if (this.isNameInvalid() || this.isPhoneInvalid() || this.isEmailInvalid()) {\r\n      return;\r\n    }\r\n\r\n    //TODO: Google Tag Manager integration!\r\n\r\n    window.open(`https://example.com/flows/${this.flowType}`, '_blank');\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'chai-form': ChaiForm;\r\n  }\r\n}\r\n"]}